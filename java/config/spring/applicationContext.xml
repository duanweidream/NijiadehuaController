<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=" 
         http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/task
         http://www.springframework.org/schema/task/spring-task-3.2.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    
	<description>Spring公共配置</description>
	
	
	<!--
	<mvc:annotation-driven>
		 SpringMvc中url有小数点 
		<mvc:path-matching registered-suffixes-only="true"/>
	</mvc:annotation-driven>
		-->
	
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.wooboo.dsp.web.controller" />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/pages"></property>
		<property name="suffix" value=".jsp"/>  
	</bean>
    <!-- jdbc.properties -->
	<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/jdbc.properties" />
	</bean>
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
    </bean>
     
     
	<bean id="sessionFactory" class="com.wooboo.dsp.system.util.AnnotationSessionFactoryBeanEx">
		<property name="dataSource" ref="dataSource" />
		   <property name="mappingDirectoryLocations">
			<list>
			</list>
			</property>
		<property name="annotatedClassesLocations">
			<list>
				<value>classpath*:com/wooboo/dsp/model/*.class</value>
			</list>
		</property>

		<property name="excludedClassesRegexPatterns">
			<list>
				<value><![CDATA[^[\w\.]+Test[\w]+$]]></value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
	</bean>
	<bean id="springUtil" class="com.wooboo.dsp.util.SpringUtil" scope="singleton"/>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
	
 	<!-- 事务处理 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<aop:config proxy-target-class="true">
		<aop:advisor  pointcut="execution(* com.wooboo.dsp.service.*.*Service.*(..))" advice-ref="txAdvice" />	
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			 <tx:method name="get*" read-only="true"/>
			 <tx:method name="query*" read-only="true"/>
			 <tx:method name="search*" read-only="true"/>
			 <tx:method name="*" propagation="REQUIRED" rollback-for="com.wooboo.dsp.exception.ServiceException"/>
		</tx:attributes> 
	</tx:advice>  
	
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
           <property name="config">  
               <bean class="com.google.code.kaptcha.util.Config">  
                   <constructor-arg>  
                       <props>  
                           <prop key="kaptcha.border">no</prop>  
                           <prop key="kaptcha.border.color">105,179,90</prop>  
                           <prop key="kaptcha.textproducer.font.color">red</prop>  
                           <prop key="kaptcha.textproducer.font.size">36</prop>  
                           <prop key="kaptcha.image.height">45</prop>  
                           <prop key="kaptcha.image.width ">100</prop>  
                           <prop key="kaptcha.session.key">code</prop>  
                           <prop key="kaptcha.textproducer.char.length">4</prop>  
                           <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>  
                       </props>  
                   </constructor-arg>  
               </bean>  
           </property>  
      </bean> 
       
	  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <property name="defaultEncoding" value="UTF-8" /> <!-- 编码 -->
	     <property name="maxInMemorySize" value="0" /> <!-- 上传时占用最大内存大小 (10240) -->
	     <property name="uploadTempDir" value="/attachment/upload/temp/" /> <!-- 上传临时保存目录名 ，带文件上传完成之后会自动删除保存的文件-->
	     <property name="maxUploadSize" value="-1" /> <!-- 最大文件大小，-1为无限止(-1) -->
	 </bean>
	 
	 
	 
</beans>